#!/usr/bin/env python3
"""
–ú–∞—Å—Å–æ–≤–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏.
–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∫–æ–¥, —Ç–∞–±–ª–∏—Ü—ã, –ø—Ä–∏–º–µ—Ä—ã. –ü–µ—Ä–µ–≤–æ–¥–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –æ–ø–∏—Å–∞–Ω–∏—è.
"""

import re
from pathlib import Path

# –°–ª–æ–≤–∞—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ –¥–ª—è –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –æ–±—â–∏—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤
TRANSLATIONS = {
    'en': {
        '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è': 'Documentation',
        '–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ': 'Table of Contents',
        '–ì–ª–∞–≤–Ω–∞—è': 'Home',
        '–û–±–∑–æ—Ä': 'Overview',
        '–û–ø–∏—Å–∞–Ω–∏–µ': 'Description',
        '–ü—Ä–∏–º–µ—Ä': 'Example',
        '–ü—Ä–∏–º–µ—Ä—ã': 'Examples',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ': 'Usage',
        '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ': 'Comparison',
        '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞': 'Advantages',
        '–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏': 'Disadvantages',
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏': 'Features',
        '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ': 'Conclusion',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': 'Recommendations',
        '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å': 'When to use',
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞': 'Installation',
        '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç': 'Quick Start',
        '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã': 'Getting Started',
        '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏': 'Best Practices',
        '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': 'Last updated',
    },
    'de': {
        '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è': 'Dokumentation',
        '–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ': 'Inhaltsverzeichnis',
        '–ì–ª–∞–≤–Ω–∞—è': 'Startseite',
        '–û–±–∑–æ—Ä': '√úbersicht',
        '–û–ø–∏—Å–∞–Ω–∏–µ': 'Beschreibung',
        '–ü—Ä–∏–º–µ—Ä': 'Beispiel',
        '–ü—Ä–∏–º–µ—Ä—ã': 'Beispiele',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ': 'Verwendung',
        '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ': 'Vergleich',
        '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞': 'Vorteile',
        '–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏': 'Nachteile',
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏': 'Funktionen',
        '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ': 'Fazit',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': 'Empfehlungen',
        '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å': 'Wann zu verwenden',
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞': 'Installation',
        '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç': 'Schnellstart',
        '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã': 'Erste Schritte',
        '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏': 'Best Practices',
        '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': 'Zuletzt aktualisiert',
    },
    'fr': {
        '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è': 'Documentation',
        '–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ': 'Table des mati√®res',
        '–ì–ª–∞–≤–Ω–∞—è': 'Accueil',
        '–û–±–∑–æ—Ä': 'Aper√ßu',
        '–û–ø–∏—Å–∞–Ω–∏–µ': 'Description',
        '–ü—Ä–∏–º–µ—Ä': 'Exemple',
        '–ü—Ä–∏–º–µ—Ä—ã': 'Exemples',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ': 'Utilisation',
        '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ': 'Comparaison',
        '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞': 'Avantages',
        '–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏': 'Inconv√©nients',
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏': 'Fonctionnalit√©s',
        '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ': 'Conclusion',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': 'Recommandations',
        '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å': 'Quand utiliser',
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞': 'Installation',
        '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç': 'D√©marrage rapide',
        '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã': 'Premiers pas',
        '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏': 'Meilleures pratiques',
        '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': 'Derni√®re mise √† jour',
    },
    'zh': {
        '–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è': 'ÊñáÊ°£',
        '–û–≥–ª–∞–≤–ª–µ–Ω–∏–µ': 'ÁõÆÂΩï',
        '–ì–ª–∞–≤–Ω–∞—è': 'È¶ñÈ°µ',
        '–û–±–∑–æ—Ä': 'Ê¶ÇËø∞',
        '–û–ø–∏—Å–∞–Ω–∏–µ': 'ÊèèËø∞',
        '–ü—Ä–∏–º–µ—Ä': 'Á§∫‰æã',
        '–ü—Ä–∏–º–µ—Ä—ã': 'Á§∫‰æã',
        '–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ': '‰ΩøÁî®ÊñπÊ≥ï',
        '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ': 'ÊØîËæÉ',
        '–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞': '‰ºòÂäø',
        '–ù–µ–¥–æ—Å—Ç–∞—Ç–∫–∏': 'Áº∫ÁÇπ',
        '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏': 'ÂäüËÉΩ',
        '–ó–∞–∫–ª—é—á–µ–Ω–∏–µ': 'ÁªìËÆ∫',
        '–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': 'Âª∫ËÆÆ',
        '–ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å': '‰ΩïÊó∂‰ΩøÁî®',
        '–£—Å—Ç–∞–Ω–æ–≤–∫–∞': 'ÂÆâË£Ö',
        '–ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ä—Ç': 'Âø´ÈÄüÂºÄÂßã',
        '–ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã': 'ÂÖ•Èó®ÊåáÂçó',
        '–õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏': 'ÊúÄ‰Ω≥ÂÆûË∑µ',
        '–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ': 'ÊúÄÂêéÊõ¥Êñ∞',
    }
}

LANGUAGE_FLAGS = {
    'ru': 'üá∑üá∫ –†—É—Å—Å–∫–∏–π',
    'en': 'üá¨üáß English',
    'de': 'üá©üá™ Deutsch',
    'fr': 'üá´üá∑ Fran√ßais',
    'zh': 'üá®üá≥ ‰∏≠Êñá'
}

def translate_text(text, lang):
    """–ü—Ä–æ—Å—Ç–æ–π –ø–µ—Ä–µ–≤–æ–¥ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –∏ –∫–ª—é—á–µ–≤—ã—Ö —Ç–µ—Ä–º–∏–Ω–æ–≤."""
    if lang == 'ru' or not text:
        return text
    
    result = text
    if lang in TRANSLATIONS:
        for ru_term, translated in TRANSLATIONS[lang].items():
            result = result.replace(ru_term, translated)
    
    return result

def create_language_links(current_lang, filename):
    """–°–æ–∑–¥–∞–µ—Ç —Å—Å—ã–ª–∫–∏ –Ω–∞ –≤—Å–µ —è–∑—ã–∫–æ–≤—ã–µ –≤–µ—Ä—Å–∏–∏."""
    links = []
    for lang_code, lang_name in LANGUAGE_FLAGS.items():
        if lang_code == current_lang:
            links.append(lang_name)
        else:
            links.append(f"[{lang_name}](../{lang_code}/{filename})")
    
    return "**Languages:** " + " | ".join(links)

def translate_file(source_path, target_path, target_lang):
    """–ü–µ—Ä–µ–≤–æ–¥–∏—Ç —Ñ–∞–π–ª, —Å–æ—Ö—Ä–∞–Ω—è—è –∫–æ–¥ –∏ —Ç–∞–±–ª–∏—Ü—ã."""
    with open(source_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    lines = content.split('\n')
    translated_lines = []
    in_code_block = False
    in_table = False
    
    for i, line in enumerate(lines):
        # Code blocks - –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º
        if line.strip().startswith('```'):
            in_code_block = not in_code_block
            translated_lines.append(line)
            continue
        
        if in_code_block:
            translated_lines.append(line)
            continue
        
        # –¢–∞–±–ª–∏—Ü—ã - –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ, —Ç–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏
        if line.strip().startswith('|') and line.strip().endswith('|'):
            if not in_table and i + 1 < len(lines) and lines[i + 1].strip().startswith('|:---'):
                # –≠—Ç–æ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞–±–ª–∏—Ü—ã - –ø–µ—Ä–µ–≤–æ–¥–∏–º
                in_table = True
                translated_lines.append(translate_text(line, target_lang))
            else:
                # –î–∞–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å - –Ω–µ –ø–µ—Ä–µ–≤–æ–¥–∏–º
                translated_lines.append(line)
            continue
        else:
            in_table = False
        
        # –ó–∞–≥–æ–ª–æ–≤–∫–∏ (–Ω–∞—á–∏–Ω–∞—é—Ç—Å—è —Å #) - –ø–µ—Ä–µ–≤–æ–¥–∏–º
        if line.strip().startswith('#'):
            translated_lines.append(translate_text(line, target_lang))
            continue
        
        # –°–ø–∏—Å–∫–∏ –∏ –æ–±—ã—á–Ω—ã–π —Ç–µ–∫—Å—Ç - –ø–µ—Ä–µ–≤–æ–¥–∏–º –±–∞–∑–æ–≤—ã–µ —Ç–µ—Ä–º–∏–Ω—ã
        if line.strip().startswith('-') or line.strip().startswith('*') or line.strip().startswith('>'):
            translated_lines.append(translate_text(line, target_lang))
            continue
        
        # –û—Å—Ç–∞–ª—å–Ω–æ–µ - –±–∞–∑–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ —Ç–µ—Ä–º–∏–Ω–æ–≤
        translated_lines.append(translate_text(line, target_lang))
    
    # –ó–∞–º–µ–Ω—è–µ–º —Å—Å—ã–ª–∫–∏ –Ω–∞ —Ä—É—Å—Å–∫—É—é –≤–µ—Ä—Å–∏—é –Ω–∞ —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫
    translated_content = '\n'.join(translated_lines)
    translated_content = translated_content.replace('../ru/', f'../{target_lang}/')
    translated_content = translated_content.replace('docs/ru/', f'docs/{target_lang}/')
    
    # –î–æ–±–∞–≤–ª—è–µ–º —è–∑—ã–∫–æ–≤—ã–µ —Å—Å—ã–ª–∫–∏ –≤ –Ω–∞—á–∞–ª–æ (–ø–æ—Å–ª–µ –ø–µ—Ä–≤–æ–≥–æ –∑–∞–≥–æ–ª–æ–≤–∫–∞)
    lines = translated_content.split('\n')
    new_lines = []
    added_links = False
    
    for i, line in enumerate(lines):
        new_lines.append(line)
        if not added_links and line.strip().startswith('#') and i == 0:
            new_lines.append('')
            new_lines.append(create_language_links(target_lang, Path(source_path).name))
            new_lines.append('')
            added_links = True
    
    translated_content = '\n'.join(new_lines)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º
    with open(target_path, 'w', encoding='utf-8') as f:
        f.write(translated_content)

print("–°–∫—Ä–∏–ø—Ç –≥–æ—Ç–æ–≤ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é, –Ω–æ —è –±—É–¥—É –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –≤—Ä—É—á–Ω—É—é –¥–ª—è –ª—É—á—à–µ–≥–æ –∫–∞—á–µ—Å—Ç–≤–∞...")
